Description:
    Fady Khallaf / deploy all the required resources for Udagram project

Parameters:
    EnvironmentName:
        Description: An environment name which will be prefixed the resources names.
        Type: String

Resources:
    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow HTTP for our Load Balancer
            VpcId: 
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
    
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0 
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
    WebServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow HTTP to hosts and SSH from local Only.
            VpcId: 
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID" 
            SecurityGroupIngress:
                - IpProtocol: tcp 
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0
    
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            IamInstanceProfile: !Ref UdagramInstanceProfile 
            ImageId: ami-00ddb0e5626798373.
            InstanceType: t2.medium
            SecurityGroups:
                - Ref: WebServerSecGroup
            UserData:
                Fn::Base64:
                    #!/bin/bash
                    apt-get update -y
                    apt-get install unzip awscli -y
                    apt-get install apache2 -y
                    systemctl start apache2.service
                    cd /var/www/html
                    aws s3 cp s3://udacity-demo-1/udacity.zip .
                    unzip -o udacity.zip
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs:
                      VolumeSize: 10
      
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
                - Fn::ImportValue:
                    !Sub "${EnvironmentName}-PRIV-NETS"  
            LaunchConfigurationName: 
                Ref: WebAppLaunchConfig
            MaxSize: '4'
            MinSize: '8'
            TargetGroupARNs: 
                -Ref: WebAppTargetGroup
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroups:
                - Ref: LBSecGroup
    
    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: 
                Ref: WebAppLB
            Port: 80
            Protocol: 'HTTP'
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref 'WebAppTargetGroup'
    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref 'Listener' 
            Actions:
                - Type: forward
                  TargetGroupArn: !Ref 'WebAppTargetGroup'  
            Priority: 1
            Conditions:
                - Field: path-pattern
                  Values: [/] 
    
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 7
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 4
            VpcId: 
                Fn::ImportValue:
                    Fn::Sub: "${EnvironmentName}-VPCID"
    
    UdacityS3ReadOnlyEC2:
        Type: AWS::IAM::Role
        Properties:
            Path: /
            AssumeRolePolicyDocument: 
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Principal:
                          Service: 
                              - ec2.amazon.aws.com
                      Action:
                          - 'sts:AssumeRole'
            Policies:
                - PolicyName: "root"
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: "Allow"
                            Action: "*"
                            Resource: "*"
    UdagramInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: /
            Roles:
                - !Ref UdacityS3ReadOnlyEC2

Outputs:
    LoadBalancerDNSName:
        Description: Load balancer DNS name
        Value: !Join ["http://", [!GetAtt WebAppLB.DNSName]]
        Export:
            Name: !Sub ${EnvironmentName}-WEB-LB  

    
                    

      